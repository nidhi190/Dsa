Given two sorted arrays arr1 and arr2 of size N and M respectively and an element K. The task is to find the element that would be at the kâ€™th position of the final sorted array.
 

Example 1:

Input:
arr1[] = {2, 3, 6, 7, 9}
arr2[] = {1, 4, 8, 10}
k = 5
Output:
6
Explanation:
The final sorted array would be -
1, 2, 3, 4, 6, 7, 8, 9, 10
The 5th element of this array is 6.


solution:

int solve(int arr1[],int arr2[],int end1,int end2,int low1,int low2,int k)
    {
        if(low1>end1)
        return arr2[low2+k-1];
        if(low2>end2)
        return arr1[low1+k-1];
        int mid1=(end1+low1)/2;
        int mid2=(end2+low2)/2;
        int kc=(mid1-low1+1)+(mid2-low2+1);
        if(kc<=k)
        {
            if(arr1[mid1]<arr2[mid2])
            {
                return solve(arr1,arr2,end1,end2,mid1+1,low2,k-(mid1-low1+1));
            }
            else
            {
                return solve(arr1,arr2,end1,end2,low1,mid2+1,k-(mid2-low2+1));
            }
        }
        else
        {
            if(arr1[mid1]<arr2[mid2])
            {
                return solve(arr1,arr2,end1,mid2-1,low1,low2,k);
            }
            else
            {
                return solve(arr1,arr2,mid1-1,end2,low1,low2,k);
            }
        }
    }
    int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
        int ans=solve(arr1,arr2,n-1,m-1,0,0,k);
        return ans;
    }
