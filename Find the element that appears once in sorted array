Given a sorted array arr[] of size N. Find the element that appears only once in the array. All other elements appear exactly twice. 

Example 1:

Input:
N = 11
arr[] = {1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65}
Output: 4
Explanation: 4 is the only element that 
appears exactly once. 

solution:

int solve(int arr[],int low,  int high)
    {
        if(high==0)
        return arr[0];
        else if(arr[0]!=arr[1])
        return arr[0];
        else if(arr[high]!=arr[high-1])
        return arr[high];
        while(low<=high)
        {
        int mid=(high+low)/2;
        
        if(arr[mid]!=arr[mid+1] && arr[mid]!=arr[mid-1])
        return arr[mid];
        else if((mid%2==0) && arr[mid]==arr[mid+1]|| (mid%2==1)&& arr[mid]==arr[mid-1])
        low=mid+1;
        else 
        high=mid-1;
        }
    }
    int findOnce(int arr[], int n)
    {
        
       int ans= solve(arr,0,n-1);
    }
