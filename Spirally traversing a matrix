Given a matrix of size r*c. Traverse the matrix in spiral form.

Example 1:

Input:
r = 4, c = 4
matrix[][] = {{1, 2, 3, 4},
           {5, 6, 7, 8},
           {9, 10, 11, 12},
           {13, 14, 15,16}}
Output: 
1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10


solution:


public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
       
    int top=0,left=0,bottom=r-1,right=c-1;
    vector<int> ans;
    int m=0;
    while(right>=left && top<=bottom)
    {
        if(m==0)
        {
            for(int i=left;i<=right;i++)
            {
                ans.push_back(matrix[top][i]);
            }
            top++;
            m=1;
        }
       else if(m==1)
       {
           for(int i=top;i<=bottom;i++)
           {
              ans.push_back(matrix[i][right]);
           }
           
           right--;
           m=2;
       }
       else if(m==2)
       {
           for(int i=right;i>=left;i--)
           {
               ans.push_back(matrix[bottom][i]);
           }
           bottom--;
           m=3;
       }
       else if(m==3)
       {
           for(int i=bottom;i>=top;i--)
           {
               ans.push_back(matrix[i][left]);
           }
           left++;
           m=0;
       }
    }
    return ans;
    }
