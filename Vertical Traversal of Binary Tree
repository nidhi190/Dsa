 vector<int> verticalOrder(Node *root)
    {
        vector<int> ans;
        if(root==NULL)
        return ans;
        map<int,vector<int>> m;
        queue<pair<Node *,int>> q;
        int l=0;
        
        q.push(make_pair(root,l));
        while(!q.empty())
        {
           pair< Node*,int> current=q.front();
            q.pop();
            l=current.second;
            Node* node=current.first;
            m[l].push_back(node->data);
            if(node->left!=NULL)
            {
                q.push(make_pair(node->left,l-1));
            }
           if(node->right!=NULL)
            {
                q.push(make_pair(node->right,l+1));
            }
        }
        //map<int,vector<int>> m:iterator it;
        for(auto it=m.begin();it!=m.end();it++)
        {
            for(int i=0;i<it->second.size();i++)
            {
                ans.push_back(it->second[i]);
            }
        }
        return ans;
        
    }
